{"version":3,"sources":["serviceWorker.ts","actions/index.ts","actions/action-creators.ts","actions/actions.ts","data-structures/navigation-list.tsx","components/pages/layout.tsx","utils/date-service.ts","components/article-list-item/article-list-item.tsx","components/article-list-item/index.ts","services/article-service.ts","services/article-service-context.ts","components/hoc/index.ts","components/hoc/with-article-service.tsx","components/spinner/index.ts","components/spinner/spinner.tsx","components/article-list/article-list.tsx","components/article-list/index.ts","components/article-filter/article-filter.tsx","components/article-filter/index.ts","components/pages/home-page.tsx","components/pages/about-page.tsx","components/settings-panel/settings-panel.tsx","components/settings-panel/index.ts","components/pages/settings-page.tsx","components/pages/help-page.tsx","components/article-full/article-full.tsx","components/article-full/index.ts","components/app/index.ts","components/app/app.tsx","reducers/article.ts","reducers/uiParams.ts","store.ts","reducers/index.ts","index.tsx","components/spinner/spinner.svg"],"names":["Boolean","window","location","hostname","match","fetchArticles","articleService","dispatch","query","pageSize","page","from","to","type","payload","q","actionCreators","getArticles","then","data","catch","err","setFromDateToState","fromDate","console","log","setToDateToState","toDate","setPageSizeToState","setQuertyToState","changeTheme","changeFontSize","fontSize","navigationList","title","link","icon","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","connect","uiParams","darkTheme","props","classes","useTheme","globalTheme","createMuiTheme","palette","primary","light","amber","main","dark","typography","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","className","Divider","List","map","item","id","style","textDecoration","color","ListItem","button","key","ListItemIcon","ListItemText","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","children","ISOdateToDatepickerFormat","date","moment","ISO_8601","format","DatepickerDateToISOformat","toISOString","maxWidth","marginBottom","media","ArticleListItem","article","Card","CardActionArea","CardMedia","image","urlToImage","component","CardContent","gutterBottom","publishedAt","description","CardActions","Button","size","ArticleService","apiKey","currentDate","a","getResource","res","articles","_transformArticles","totalArticles","totalResults","Math","random","toString","substr","apiURL","this","fetch","ok","Error","status","json","body","ArticleServiceProvider","Provider","ArticleServiceConsumer","Consumer","withArticleService","Wrapped","Spinner","spinner","ArticleList","items","loadMoreArticles","pageStart","hasMore","useWindow","loadMore","loader","ArticleListContainer","getArticleListItems","push","error","getPageNews","Component","HomePage","withBookstoreService","articleList","articlesQuertyParams","ArticleFilter","dateFrom","dateTo","TextField","label","defaultValue","onChange","event","fromDateOnChange","target","value","InputLabelProps","shrink","toDateOnChange","ArticleFilterContainer","fromDateChange","toDateChange","Fragment","Container","AboutPage","SettingsPanel","noValidate","FormControlLabel","control","Switch","checked","SettingsPage","HelpPage","ArticleFull","useParams","find","App","path","exact","initialState","day","loading","upateArticle","state","action","undefined","concat","upateUIparams","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"uWAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0MCdOC,EAAgB,SAC3BC,EACAC,GAF2B,OAGxB,SACHC,EACAC,EACAC,EACAC,EACAC,GAEAL,ECV8B,SAACC,GAC/B,MAAO,CACLK,KCNiC,wBDOjCC,QAAS,CAAEC,EAAGP,IDOPQ,CAAgCR,IAEzCF,EACGW,YAAYT,EAAOC,EAAUC,EAAMC,EAAMC,GACzCM,MAAK,SAAAC,GACJZ,ECPG,CACLM,KCZiC,wBDajCC,QDKwCK,OAEvCC,OAAM,SAAAC,GAAG,OAAId,ECIT,CACLM,KCvBiC,wBDwBjCC,QDNmDO,SAU1CC,EAAqB,SAACf,GAAD,OAAmB,SAACgB,GACpDC,QAAQC,IAAI,sBACZlB,ECc4B,SAACgB,GAC7B,MAAO,CACLV,KCzC4B,mBD0C5BC,QAASS,GDjBFP,CAA8BO,MAG5BG,EAAmB,SAACnB,GAAD,OAAmB,SAACoB,GAClDH,QAAQC,IAAI,oBACZlB,ECgB0B,SAACoB,GAC3B,MAAO,CACLd,KC/C0B,iBDgD1BC,QAASa,GDnBFX,CAA4BW,MAG1BC,EAAqB,SAACrB,GAAD,OAAmB,SAACE,GACpDe,QAAQC,IAAI,qBAAsBhB,GAClCF,ECkB4B,SAACE,GAC7B,MAAO,CACLI,KCpD4B,mBDqD5BC,QAASL,GDrBFO,CAA8BP,MAG5BoB,EAAmB,SAACtB,GAAD,OAAmB,SAACQ,GAClDS,QAAQC,IAAI,oBACZlB,ECPO,CACLM,KCnC+B,sBDoC/BC,QDKgCC,MAGvBe,EAAc,SAACvB,GAAD,OAAmB,WAC5CiB,QAAQC,IAAI,eACZlB,ECgBO,CACLM,KC1DwB,mBF4CfkB,EAAiB,SAACxB,GAAD,OAAmB,SAACyB,GAChDR,QAAQC,IAAI,kBACZlB,ECgB4B,SAACyB,GAC7B,MAAO,CACLnB,KC/D4B,mBDgE5BC,QAASkB,GDnBFhB,CAA8BgB,M,oEGlD5BC,EAAuC,CAClD,CAAEC,MAAO,OAAQC,KAAM,IAAKC,KAAM,kBAAC,IAAD,OAClC,CAAEF,MAAO,WAAYC,KAAM,YAAaC,KAAM,kBAAC,IAAD,OAC9C,CAAEF,MAAO,OAAQC,KAAM,QAASC,KAAM,kBAAC,IAAD,OACtC,CAAEF,MAAO,QAASC,KAAM,SAAUC,KAAM,kBAAC,IAAD,QCqBpCC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,QAAS,QAEXC,OAAO,eACJH,EAAMI,YAAYC,GAAG,MAAQ,CAC5BC,MARc,IASdC,WAAY,IAGhBC,OAAO,eACJR,EAAMI,YAAYC,GAAG,MAAQ,CAC5BC,MAAM,eAAD,OAdS,IAcT,OACLG,WAfc,MAkBlBC,WAAW,aACTC,YAAaX,EAAMY,QAAQ,IAC1BZ,EAAMI,YAAYC,GAAG,MAAQ,CAC5BH,QAAS,SAGbW,QAASb,EAAMc,OAAOD,QACtBE,YAAa,CACXT,MA1BgB,KA4BlBU,QAAS,CACPC,SAAU,EACVC,QAASlB,EAAMY,QAAQ,QA8G3B,IAYeO,eAZS,SAAC,GAEG,IAAD,IADzBC,SAEA,MAAO,CAAEC,UADgB,EADbA,UAEQ5B,SADK,EADFA,aAKE,SAACzB,EAAD,GAA4C,EAA1BD,eAC3C,MAAO,CACLwB,YAAaA,EAAYvB,MAIdmD,EAhHf,SAAgBG,GACd,IAAMC,EAAUzB,IACVE,EAAQwB,cAERC,EAAcC,YAAe,CACjCC,QAAS,CACPC,QAAS,CACPC,MAAOC,IAAM,KACbC,KAAMD,IAAM,KACZE,KAAMF,IAAM,MAEdxD,KAAMgD,EAAMD,UAAY,OAAS,SAEnCY,WAAY,CACVxC,SAAU6B,EAAM7B,YAdkB,EAkBFyC,IAAMC,UAAS,GAlBb,mBAkB/BC,EAlB+B,KAkBnBC,EAlBmB,KAoBhCC,EAAqB,WACzBD,GAAeD,IAGXjC,EACJ,6BACE,yBAAKoC,UAAWhB,EAAQV,UACxB,kBAAC2B,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACG/C,EAAegD,KAAI,SAACC,EAAMC,GAAP,OAClB,kBAAC,IAAD,CAAMvE,GAAIsE,EAAK/C,KAAMiD,MAAO,CAAEC,eAAgB,OAAQC,MAAO,YAC3D,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAKP,EAAKhD,OACzB,kBAACwD,EAAA,EAAD,KAAeR,EAAK9C,MACpB,kBAACuD,EAAA,EAAD,CAAcxB,QAASe,EAAKhD,cAKpC,kBAAC6C,EAAA,EAAD,OAIJ,OACE,kBAAC,IAAD,CAAkBxC,MAAOyB,GACvB,yBAAKc,UAAWhB,EAAQtB,MACtB,kBAACoD,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,QAAQhB,UAAWhB,EAAQf,QAC1C,kBAACgD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEV,MAAM,UACNW,aAAW,cACXC,KAAK,QACLC,QAAStB,EACTC,UAAWhB,EAAQb,YAEnB,kBAAC,IAAD,OAEF,kBAACmD,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,GAA/B,cAKJ,yBAAKxB,UAAWhB,EAAQpB,OAAQuD,aAAW,mBACzC,kBAACM,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OAC1B,kBAACC,EAAA,EAAD,CACEL,QAAQ,YACRM,OAA4B,QAApBpE,EAAMqE,UAAsB,QAAU,OAC9CC,KAAMlC,EACNmC,QAASjC,EACTf,QAAS,CACPiD,MAAOjD,EAAQR,aAEjB0D,WAAY,CACVC,aAAa,IAGdvE,IAGL,kBAAC6D,EAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,OAC5B,kBAACC,EAAA,EAAD,CACE5C,QAAS,CACPiD,MAAOjD,EAAQR,aAEjB+C,QAAQ,YACRQ,MAAI,GAEHnE,KAIP,0BAAMoC,UAAWhB,EAAQP,SACvB,yBAAKuB,UAAWhB,EAAQV,UACvBS,EAAMsD,e,uJClKJC,GAA4B,SAACC,GAExC,OAAOC,KAAOD,EAAMC,KAAOC,UAAUC,OADP,eASnBC,GAA4B,SAACJ,GAExC,OAAOC,KAAOD,EADgB,cACQK,eCQlCrF,I,OAAYC,YAAW,CAC3BE,KAAM,CACJmF,SAAU,IACVC,aAAc,IAEhBC,MAAO,MCzBMC,GD4BS,SAAC,GAAwC,IDvB/BT,ECuBPU,EAAqC,EAArCA,QACnBjE,EAAUzB,KAChB,OACE,kBAAC2F,GAAA,EAAD,CAAMlD,UAAWhB,EAAQtB,MACvB,kBAACyF,GAAA,EAAD,KACE,kBAAC,IAAD,CACErH,GAAE,oBAAemH,EAAQ5C,IACzBC,MAAO,CAAEC,eAAgB,OAAQC,MAAO,YAExC,kBAAC4C,GAAA,EAAD,CACEpD,UAAWhB,EAAQ+D,MACnBM,MAAOJ,EAAQK,WACfC,UAAU,QAEZ,kBAACC,GAAA,EAAD,KACE,kBAAClC,EAAA,EAAD,CAAYmC,cAAY,EAAClC,QAAQ,KAAKgC,UAAU,MAC7CN,EAAQ7F,OAEX,kBAACkE,EAAA,EAAD,CAAYC,QAAQ,KAAKf,MAAM,gBAAgB+C,UAAU,MDzCnChB,EC0CDU,EAAQS,YDxChClB,KAAOD,EAAMC,KAAOC,UAAUC,OADf,kBC2CZ,kBAACpB,EAAA,EAAD,CAAYC,QAAQ,QAAQf,MAAM,gBAAgB+C,UAAU,KACzDN,EAAQU,gBAKjB,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQC,KAAK,QAAQtD,MAAM,WAA3B,iB,6BExDauD,G,4DACnBC,OAAS,mC,KACTC,YAAc,a,KAmBd9H,Y,yCAAc,WACZT,EACAC,EACAC,EACAC,EACAC,GALY,gBAAAoI,EAAA,sEAOM,EAAKC,YAAYzI,EAAOC,EAAUC,EAAMC,EAAMC,GAPpD,cAONsI,EAPM,OAQZ1H,QAAQC,IACN,4CACAyH,EAAIC,SAASlE,IAAI,EAAKmE,qBAVZ,kBAYL,CACLC,cAAeH,EAAII,aACnBH,SAAUD,EAAIC,SAASlE,IAAI,EAAKmE,sBAdtB,2C,mEAkBdA,mBAAqB,SAACrB,GACpB,MAAO,CACL5C,GACE,IACAoE,KAAKC,SACFC,SAAS,IACTC,OAAO,EAAG,GACfxH,MAAO6F,EAAQ7F,MACfuG,YAAaV,EAAQU,YACrBL,WAAYL,EAAQK,WACpBI,YAAaT,EAAQS,YACrBjF,QAASwE,EAAQxE,U,mGA7CnB/C,G,uGACAC,E,+BAAmB,EACnBC,E,+BAAe,EACfC,E,uBACAC,E,uBAEI+I,E,8CAAgDnJ,E,iBAAcG,E,eAAWC,E,sCAAgCgJ,KAAKd,O,qBAAmBrI,E,iBAAiBC,GACtJc,QAAQC,IAAR,gBAAqBkI,I,SACHE,MAAMF,G,WAAlBT,E,QACGY,G,uBACD,IAAIC,MAAM,0BAAmBJ,GAAnB,qBAA4CT,EAAIc,S,yBAE/Cd,EAAIe,O,eAAjBC,E,yBACCA,G,kHCVPzF,gBAAgD,CAACnE,eAAgB,IAAIuI,KAF7DsB,G,GAAVC,SACUC,G,GAAVC,SCPaC,GCCY,SAACC,GAC1B,OAAO,SAAC3G,GACN,OACE,gBAACwG,GAAD,MACG,SAAA/J,GACC,OACE,gBAACkK,EAAD,iBACM3G,EADN,CAEEvD,eAAc,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAgBA,uB,6BCT/BmK,GCGC,WACd,OAAO,4BAAQ5J,KAAK,gBAAgBM,KAAMuJ,QCgBtCC,I,OAAc,SAAC,GAMK,IALxBC,EAKuB,EALvBA,MACAC,EAIuB,EAJvBA,iBACAxB,EAGuB,EAHvBA,cACA3I,EAEuB,EAFvBA,KACAD,EACuB,EADvBA,SAEA,OACE,kBAAC,KAAD,CACEqK,UAAW,EACXC,QAASrK,EAAOD,EAAW4I,GAA0B,IAAT3I,EAC5CsK,WAAW,EACXC,SAAUJ,EACVK,OAAQ,kBAAC,GAAD,OAEPN,KAuBDO,G,4MAEJC,oBAAsB,WACpB,IAAIlC,EAAqB,GAKzB,OAJA,EAAKrF,MAAMsF,SAASlE,KAAI,SAASC,EAAMC,GACrC+D,EAAImC,KAAK,kBAAC,GAAD,CAAiBtD,QAAS7C,EAAMO,IAAKN,QAGzC+D,G,2HAGM,IAAD,OACZ,OAAO,SAACxI,GACNc,QAAQC,IAAI,OAAQ,EAAKoC,MAAMnD,MAC/B,EAAKmD,MAAMxD,cACT,EAAKwD,MAAM9C,EACX,EAAK8C,MAAMpD,SACX,EAAKoD,MAAMnD,KACX,EAAKmD,MAAMlD,KACX,EAAKkD,MAAMjD,O,+BAMf,OAAIgJ,KAAK/F,MAAMyH,MACN,sCAIP,kBAAC,GAAD,CACEV,MAAOhB,KAAKwB,sBACZP,iBAAkBjB,KAAK2B,cACvBlC,cAAeO,KAAK/F,MAAMwF,cAC1B3I,KAAMkJ,KAAK/F,MAAMnD,KACjBD,SAAUmJ,KAAK/F,MAAMpD,e,GAnCM+K,aC1DpBC,GDoHAC,GACbhI,aAlBsB,SAAC,GAOG,IAAD,IANzBiI,YACExC,EAKuB,EALvBA,SACAE,EAIuB,EAJvBA,cAIuB,IAHvBuC,qBAIF,MAAO,CAAEzC,WAAUE,gBAAetI,EADT,EAHCA,EAIWN,SADZ,EAHIA,SAIkBC,KADtB,EAHcA,KAIcC,KAD5B,EAHoBA,KAIcC,GADlC,EAH0BA,GAIY0K,MADtC,EAFvBA,UAMuB,SAAC/K,EAAD,GAA6C,IAA3BD,EAA0B,EAA1BA,eAC3C,MAAO,CACLD,cAAeA,EAAcC,EAAgBC,MAK/CmD,CAA6CyH,K,UEpGzCU,I,0LACM,IAAD,SACYjC,KAAK/F,MAAlBlD,EADC,EACDA,KAAMC,EADL,EACKA,GACRkL,EAAW1E,GAA0BzG,GACrCoL,EAAS3E,GAA0BxG,GAEvC,OACE,8BACE,kBAACoL,GAAA,EAAD,CACE7G,GAAG,gBACH8G,MAAM,YACNpL,KAAK,OACLqL,aAAcJ,EACdK,SAAU,SAAAC,GAAK,OAAI,EAAKvI,MAAMwI,iBAAiBD,EAAME,OAAOC,QAC5DC,gBAAiB,CACfC,QAAQ,KAGZ,kBAACT,GAAA,EAAD,CACE7G,GAAG,cACH8G,MAAM,UACNpL,KAAK,OACLqL,aAAcH,EACdI,SAAU,SAAAC,GAAK,OAAI,EAAKvI,MAAM6I,eAAeN,EAAME,OAAOC,QAC1DC,gBAAiB,CACfC,QAAQ,U,GAzBQjB,cAyCfmB,GAAb,yLAGkB,IAAD,OACb,OAAO,SAAChL,GACN,EAAKkC,MAAMnC,iBAAiBC,MALlC,uCASoB,IAAD,OACf,OAAO,SAACJ,GACN,EAAKsC,MAAMvC,mBAAmBC,MAXpC,+BAeY,IAAD,EACcqI,KAAK/F,MAAlBlD,EADD,EACCA,KAAMC,EADP,EACOA,GACd,OACE,kBAAC,GAAD,CACED,KAAMA,EACNC,GAAIA,EACJyL,iBAAkBzC,KAAKgD,iBACvBF,eAAgB9C,KAAKiD,qBAtB7B,GAA4CrB,aC1D7BK,GDsGAnI,aAhBS,SAAC,GAIG,IAAD,IAHzBiI,YACEC,qBAGF,MAAO,CAAEjL,KADgB,EAFCA,KAGXC,GADU,EAFOA,OAMP,SAACL,EAAD,GAA4C,EAA1BD,eAC3C,MAAO,CACLuB,iBAAkBA,EAAiBtB,GACnCe,mBAAoBA,EAAmBf,GACvCmB,iBAAkBA,EAAiBnB,MAIxBmD,CAGbiJ,IE1FalB,GAXE,WACf,OACE,kBAAC,IAAMqB,SAAP,KACE,kBAACC,EAAA,EAAD,CAAWpF,SAAS,MAClB,kBAAC,GAAD,MACA,kBAAC,GAAD,SCJOqF,GAJG,WAChB,OAAO,2C,oBCaIC,GAAb,mLACY,IAAD,OACP,OACE,0BAAMC,YAAU,GACd,kBAAClB,GAAA,EAAD,CACE7G,GAAG,+BACH8G,MAAM,yBACN5F,QAAQ,WACRkG,MAAO3C,KAAK/F,MAAMpD,SAASgJ,WAC3B0C,SAAU,SAAAC,GAAK,OAAI,EAAKvI,MAAMhC,kBAAkBuK,EAAME,OAAOC,UAE/D,kBAACP,GAAA,EAAD,CACE7G,GAAG,kBACH8G,MAAM,YACN5F,QAAQ,WACRkG,MAAO3C,KAAK/F,MAAM7B,SAASyH,WAC3B0C,SAAU,SAAAC,GAAK,OAAI,EAAKvI,MAAM9B,gBAAgBqK,EAAME,OAAOC,UAE7D,kBAACY,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEC,QAAS1D,KAAK/F,MAAMD,UACpBuI,SAAUvC,KAAK/F,MAAM/B,YACrByK,MAAM,YACNjH,MAAM,YAGV2G,MAAM,oBA3BhB,GAAmCT,aCfpByB,GDkEAvJ,aAjBS,SAAC,GAKG,IAHAjD,EAGD,EAJzBkL,YACEC,qBAAwBnL,SAGD,IADzBkD,SAEA,MAAO,CAAElD,WAAUmD,UADM,EADbA,UAEkB5B,SADL,EADFA,aAKE,SAACzB,EAAD,GAA4C,EAA1BD,eAC3C,MAAO,CACLuB,iBAAkBD,EAAmBrB,GACrCuB,YAAaA,EAAYvB,GACzBwB,eAAgBA,EAAexB,MAIpBmD,CAA6CuJ,IErD7CM,GAVM,WACnB,OACE,kBAAC,IAAMT,SAAP,KACE,kBAACC,EAAA,EAAD,CAAWpF,SAAS,MAClB,kBAAC,GAAD,SCCO6F,GARE,WACf,OACE,kBAAC,IAAMV,SAAP,KACE,2CCYAzK,I,cAAYC,YAAW,CAC3BE,KAAM,CACJmF,SAAU,IACVC,aAAc,IAEhBC,MAAO,MCpBM4F,GD8DA/J,aARS,SAAC,GAGvB,MAAO,CACLyF,SAFuB,EADzBwC,YAAexC,YAOFzF,EAnCK,SAAC,GAAmC,IAAjCyF,EAAgC,EAAhCA,SACfhE,EAAOuI,cAAPvI,GACF4C,EAAUoB,EAASwE,MAAK,SAAAzI,GAAI,OAAIA,EAAKC,KAAOA,KAE1CrB,EAAUzB,KAEhB,OACE,kBAAC2F,GAAA,EAAD,CAAMlD,UAAWhB,EAAQtB,MACvB,kBAAC0F,GAAA,EAAD,CACEpD,UAAWhB,EAAQ+D,MACnBM,MAAK,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAASK,WAChBC,UAAU,QAEZ,kBAACC,GAAA,EAAD,KACE,kBAAClC,EAAA,EAAD,CAAYmC,cAAY,EAAClC,QAAQ,KAAKgC,UAAU,MAAhD,OACGN,QADH,IACGA,OADH,EACGA,EAAS7F,OAEZ,kBAACkE,EAAA,EAAD,CAAYC,QAAQ,KAAKf,MAAM,gBAAgB+C,UAAU,MAEzD,kBAACjC,EAAA,EAAD,CAAYC,QAAQ,QAAQf,MAAM,gBAAgB+C,UAAU,KAA5D,OACGN,QADH,IACGA,OADH,EACGA,EAASxE,cE/CLqK,GCOH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIxF,UAAWoD,GAAUqC,OAAK,IAC1C,kBAAC,IAAD,CAAOD,KAAK,gBAAgBxF,UAAWoF,KACvC,kBAAC,IAAD,CAAOI,KAAK,YAAYxF,UAAWkF,GAAcO,OAAK,IACtD,kBAAC,IAAD,CAAOD,KAAK,QAAQxF,UAAWmF,GAAUM,OAAK,IAC9C,kBAAC,IAAD,CAAOD,KAAK,SAASxF,UAAW2E,GAAWc,OAAK,O,kBCCpDnM,GAAiB2F,OAASI,cAKxBqG,GAAgC,CACpC5E,SAAU,GACVE,cAAe,EACfuC,qBAAsB,CACpB7K,EAAG,UACHN,SAAU,EACVC,KAAM,EACNC,KAXmB2G,OACpB0G,IAAI,GACJtG,cAUC9G,GAAIe,IAENsM,SAAS,EACT3C,MAAO,MAET9J,QAAQC,IAAI,SAAUsM,GAAanC,qBAAqBjL,MACxDa,QAAQC,IAAI,OAAQsM,GAAanC,qBAAqBhL,IAC/C,IAAMsN,GAAe,SAC1BC,EACAC,GAEA,QAAcC,IAAVF,EAAqB,OAAOJ,GAEhC,OAAQK,EAAOvN,MACb,I1B7CiC,wB0B+C/B,OADAW,QAAQC,I1B9CuB,yB0B+CxB,gBACF0M,EAAMxC,YADX,CAEEC,qBAAqB,cACnBlL,KAAM,EACNK,EAAGqN,EAAOtN,QAAQC,GACfoN,EAAMxC,YAAYC,sBAEvBqC,SAAS,EACT3C,MAAO,OAGX,I1BzDiC,wB0B4D/B,OAFA9J,QAAQC,I1B1DuB,yB0B2D/BD,QAAQC,IAAI2M,EAAOtN,SACZ,gBACFqN,EAAMxC,YADX,CAEEC,qBAAqB,gBAChBuC,EAAMxC,YAAYC,qBADH,CAElBlL,KAAMyN,EAAMxC,YAAYC,qBAAqBlL,KAAO,IAEtDyI,SAAUgF,EAAMxC,YAAYxC,SAASmF,OAAOF,EAAOtN,QAAQqI,UAC3DE,cAAe+E,EAAOtN,QAAQuI,cAC9B4E,SAAS,EACT3C,MAAO,OAGX,I1BvE8C,6B0ByE5C,OADA9J,QAAQC,I1BxEoC,8B0ByErC,gBACF0M,EAAMxC,YADX,CAEExC,SAAU,GACV8E,SAAS,EACT3C,MAAO,OAGX,I1B/EiC,wB0BiF/B,OADA9J,QAAQC,I1BhFuB,yB0BiFxB,gBACF0M,EAAMxC,YADX,CAEExC,SAAU,GACV8E,SAAS,EACT3C,MAAO8C,EAAOtN,UAGlB,I1BtFqC,4B0BwFnC,OADAU,QAAQC,I1BvF2B,6B0BwF5B,gBACF0M,EAAMxC,YADX,CAEExC,SAAU,GACVyC,qBAAqB,gBAChBwC,EAAOtN,WAIhB,I1B9F+B,sB0BgG7B,OADAU,QAAQC,I1B/FqB,uB0BgGtB,gBACF0M,EAAMxC,YADX,CAEExC,SAAU,GACVyC,qBAAqB,gBAChBuC,EAAMxC,YAAYC,qBADH,CAElB7K,EAAGqN,EAAOtN,YAIhB,I1BxG4B,mB0B0G1B,OADAU,QAAQC,I1BzGkB,oB0B0GnB,gBACF0M,EAAMxC,YADX,CAEExC,SAAU,GACVyC,qBAAqB,gBAChBuC,EAAMxC,YAAYC,qBADH,CAElBlL,KAAM,EACNC,KAAM8G,GAA0B2G,EAAOtN,aAI7C,I1BnH0B,iB0BqHxB,OADAU,QAAQC,I1BpHgB,kB0BqHjB,gBACF0M,EAAMxC,YADX,CAEExC,SAAU,GACVyC,qBAAqB,gBAChBuC,EAAMxC,YAAYC,qBADH,CAElBlL,KAAM,EACNE,GAAI6G,GAA0B2G,EAAOtN,aAI3C,I1B7H4B,mB0B+H1B,OADAU,QAAQC,I1B9HkB,oB0B+HnB,gBACF0M,EAAMxC,YADX,CAEExC,SAAU,GACVyC,qBAAqB,gBAChBuC,EAAMxC,YAAYC,qBADH,CAElBlL,KAAM,EACND,SAAU2N,EAAOtN,YAIvB,QACE,OAAOqN,EAAMxC,cCjJboC,GAA6B,CACjCnK,WAAW,EACX5B,SAAU,IAGCuM,GAAgB,SAC3BJ,EACAC,GAEA,QAAcC,IAAVF,EAAqB,OAAOJ,GAEhC,OAAQK,EAAOvN,MACb,I3BJwB,e2BOtB,OAFAW,QAAQC,I3BLc,gB2BOf,gBACF0M,EAAMxK,SADX,CAEEC,WAAYuK,EAAMxK,SAASC,YAG/B,I3BX4B,mB2Bc1B,OAFApC,QAAQC,I3BZkB,oB2BcnB,gBACF0M,EAAMxK,SADX,CAEE3B,SAAUoM,EAAOtN,UAGrB,QACE,OAAOqN,EAAMxK,WC3BJ6K,GAFDC,cCCE,SAACN,EAAYC,GAC3B,MAAO,CACLzC,YAAauC,GAAaC,EAAOC,GACjCzK,SAAU4K,GAAcJ,EAAOC,OCQ7B9N,I,OAAiB,IAAIuI,IAE3B6F,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,IACf,kBAACrE,GAAD,CAAwBoC,MAAO,CAACjM,oBAC9B,kBAAC,IAAD,KACE,kBAAC,GAAD,SAINsO,SAASC,eAAe,SjCiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9N,MAAK,SAAA+N,GACjCA,EAAaC,iB,mBkC7InBC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.8879345e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ArticleService from \"../services/article-service\";\r\nimport { articlesQuertyParamsType } from \"../entities/StoreStructure\";\r\nimport * as actionCreators from \"./action-creators\";\r\n\r\nexport const fetchArticles = (\r\n  articleService: ArticleService,\r\n  dispatch: any\r\n) => (\r\n  query: string,\r\n  pageSize: number,\r\n  page: number,\r\n  from: string,\r\n  to: string\r\n) => {\r\n  dispatch(actionCreators.articleRequested(query));\r\n\r\n  articleService\r\n    .getArticles(query, pageSize, page, from, to)\r\n    .then(data => {\r\n      dispatch(actionCreators.articleLoaded(data));\r\n    })\r\n    .catch(err => dispatch(actionCreators.articleError(err)));\r\n};\r\n\r\nexport const setArticlesQuertyParamsFunc = (dispatch: any) => (\r\n  params: articlesQuertyParamsType\r\n) => {\r\n  console.log(\"setArticlesQuertyParamsFunc\");\r\n  dispatch(actionCreators.setArticlesQuertyParams(params));\r\n};\r\n\r\nexport const setFromDateToState = (dispatch: any) => (fromDate: string) => {\r\n  console.log(\"setFromDateToState\");\r\n  dispatch(actionCreators.fromDateChange(fromDate));\r\n};\r\n\r\nexport const setToDateToState = (dispatch: any) => (toDate: string) => {\r\n  console.log(\"setToDateToState\");\r\n  dispatch(actionCreators.toDateChange(toDate));\r\n};\r\n\r\nexport const setPageSizeToState = (dispatch: any) => (pageSize: number) => {\r\n  console.log(\"setPageSizeToState\", pageSize);\r\n  dispatch(actionCreators.pageSizeChange(pageSize));\r\n};\r\n\r\nexport const setQuertyToState = (dispatch: any) => (q: string) => {\r\n  console.log(\"setQuertyToState\");\r\n  dispatch(actionCreators.setQuerty(q));\r\n};\r\n\r\nexport const changeTheme = (dispatch: any) => () => {\r\n  console.log(\"changeTheme\");\r\n  dispatch(actionCreators.themeChange());\r\n};\r\n\r\nexport const changeFontSize = (dispatch: any) => (fontSize: number) => {\r\n  console.log(\"changeFontSize\");\r\n  dispatch(actionCreators.fontSizeChange(fontSize));\r\n};\r\n","import * as actions from './actions'\r\nimport { articlesQuertyParamsType } from \"../entities/StoreStructure\";\r\nimport { Article } from '../entities/Article';\r\n\r\nexport const articleRequested = (query: string): ArticleActionType => {\r\n  return {\r\n    type: actions.FETCH_ARTICLE_REQUEST,\r\n    payload: { q: query }\r\n  };\r\n};\r\n\r\nexport const articleLoaded = (newArticles: any): ArticleActionType => {\r\n  return {\r\n    type: actions.FETCH_ARTICLE_SUCCESS,\r\n    payload: newArticles\r\n  };\r\n};\r\n\r\nexport const articleLoadedEmptyResult = (): ArticleActionType => {\r\n  return {\r\n    type: actions.FETCH_ARTICLE_SUCCESS_EMPTY_RESULT\r\n  };\r\n};\r\n\r\nexport const articleError = (error: string): ArticleActionType => {\r\n  return {\r\n    type: actions.FETCH_ARTICLE_FAILURE,\r\n    payload: error\r\n  };\r\n};\r\n\r\nexport const setArticlesQuertyParams = (\r\n  params: articlesQuertyParamsType\r\n): ArticleActionType => {\r\n  return {\r\n    type: actions.SET_ARTICLE_QUERTY_PARAMS,\r\n    payload: params\r\n  };\r\n};\r\n\r\nexport const setQuerty = (querty: string): ArticleActionType => {\r\n  return {\r\n    type: actions.QUERTY_INPUT_CHANGE,\r\n    payload: querty\r\n  };\r\n};\r\n\r\nexport const fromDateChange = (fromDate: string): ArticleActionType => {\r\n  return {\r\n    type: actions.FROM_DATE_CHANGE,\r\n    payload: fromDate\r\n  };\r\n};\r\n\r\nexport const toDateChange = (toDate: string): ArticleActionType => {\r\n  return {\r\n    type: actions.TO_DATE_CHANGE,\r\n    payload: toDate\r\n  };\r\n};\r\n\r\nexport const pageSizeChange = (pageSize: number): ArticleActionType => {\r\n  return {\r\n    type: actions.PAGE_SIZE_CHANGE,\r\n    payload: pageSize\r\n  };\r\n};\r\n\r\nexport const themeChange = (): ArticleActionType => {\r\n  return {\r\n    type: actions.THEME_CHANGE\r\n  };\r\n};\r\n\r\nexport const fontSizeChange = (fontSize: number): ArticleActionType => {\r\n  return {\r\n    type: actions.FONT_SIZE_CHANGE,\r\n    payload: fontSize\r\n  };\r\n};\r\n\r\ninterface ActionTypeBase {\r\n  type: string;\r\n}\r\n\r\ninterface ArticleActionType extends ActionTypeBase {\r\n  payload?: any;\r\n}\r\n","export const FETCH_ARTICLE_REQUEST = \"FETCH_ARTICLE_REQUEST\";\r\nexport const FETCH_ARTICLE_SUCCESS = \"FETCH_ARTICLE_SUCCESS\";\r\nexport const FETCH_ARTICLE_SUCCESS_EMPTY_RESULT = \"FETCH_ARTICLE_EMPTY_RESULT\";\r\nexport const FETCH_ARTICLE_FAILURE = \"FETCH_ARTICLE_FAILURE\";\r\n\r\nexport const SET_ARTICLE_QUERTY_PARAMS = \"SET_ARTICLE_QUERTY_PARAMS\";\r\n\r\nexport const QUERTY_INPUT_CHANGE = \"QUERTY_INPUT_CHANGE\";\r\nexport const FROM_DATE_CHANGE = \"FROM_DATE_CHANGE\";\r\nexport const TO_DATE_CHANGE = \"TO_DATE_CHANGE\";\r\n\r\nexport const PAGE_SIZE_CHANGE = \"PAGE_SIZE_CHANGE\";\r\nexport const THEME_CHANGE = \"THEME_CHANGE\"\r\nexport const FONT_SIZE_CHANGE = \"FONT_SIZE_CHANGE\"\r\n","import React from \"react\";\r\n\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\n\r\n\r\nexport const navigationList: navigationListType[] = [\r\n  { title: \"News\", link: \"/\", icon: <InboxIcon /> },\r\n  { title: \"Settings\", link: \"/settings\", icon: <SettingsIcon /> },\r\n  { title: \"Help\", link: \"/help\", icon: <HelpOutlineIcon /> },\r\n  { title: \"About\", link: \"/about\", icon: <InfoIcon /> }\r\n];\r\n\r\ninterface navigationListType {\r\n  title: string;\r\n  link: string;\r\n  icon: JSX.Element;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  AppBar,\r\n  CssBaseline,\r\n  Divider,\r\n  Hidden,\r\n  IconButton,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Toolbar,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport {\r\n  makeStyles,\r\n  useTheme,\r\n  createMuiTheme,\r\n  MuiThemeProvider\r\n} from \"@material-ui/core/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport amber from \"@material-ui/core/colors/amber\";\r\n\r\nimport { StoreStructure } from \"../../entities/StoreStructure\";\r\nimport { changeTheme } from \"../../actions\";\r\nimport { navigationList } from \"../../data-structures/navigation-list\";\r\n\r\nconst drawerWidth = 320;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0\r\n    }\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth\r\n    }\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3)\r\n  }\r\n}));\r\n\r\ninterface LayoutType {\r\n  darkTheme: boolean;\r\n  fontSize: number;\r\n  children: any;\r\n}\r\n\r\nfunction Layout(props: LayoutType): any {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const globalTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        light: amber[600],\r\n        main: amber[500],\r\n        dark: amber[400]\r\n      },\r\n      type: props.darkTheme ? \"dark\" : \"light\"\r\n    },\r\n    typography: {\r\n      fontSize: props.fontSize\r\n    }\r\n  });\r\n\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        {navigationList.map((item, id) => (\r\n          <Link to={item.link} style={{ textDecoration: \"none\", color: \"initial\" }}>\r\n            <ListItem button key={item.title}>\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.title} />\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <MuiThemeProvider theme={globalTheme}>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n              News App\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n          <Hidden smUp implementation=\"css\">\r\n            <Drawer\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n              open={mobileOpen}\r\n              onClose={handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper\r\n              }}\r\n              ModalProps={{\r\n                keepMounted: true // Better open performance on mobile.\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          {props.children}\r\n        </main>\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  uiParams: { darkTheme, fontSize }\r\n}: StoreStructure): any => {\r\n  return { darkTheme, fontSize };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any, { articleService }: any) => {\r\n  return {\r\n    changeTheme: changeTheme(dispatch)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\r\n","import moment from \"moment\";\r\n\r\nexport const ISOdateToDatepickerFormat = (date: string) => {\r\n  let datepickerFormat:string = \"YYYY-MM-DD\";\r\n  return moment(date, moment.ISO_8601).format(datepickerFormat);\r\n};\r\n\r\nexport const ISOdateToUIformat = (date: string) => {\r\n  let UIformat:string = \"DD MMMM YYYY\";\r\n  return moment(date, moment.ISO_8601).format(UIformat);\r\n};\r\n\r\nexport const DatepickerDateToISOformat = (date: string) => {\r\n  let datepickerFormat:string = \"YYYY-MM-DD\";\r\n  return moment(date, datepickerFormat).toISOString();\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardActions,\r\n  CardContent,\r\n  Typography,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\n\r\nimport { Article } from \"../../entities/Article\";\r\nimport { ISOdateToUIformat } from \"../../utils/date-service\";\r\n\r\nimport \"./article-list-item.css\";\r\n\r\ninterface IArticleListItemProps {\r\n  article: Article;\r\n}\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 845,\r\n    marginBottom: 50\r\n  },\r\n  media: {}\r\n});\r\n\r\nconst ArticleListItem = ({ article }: IArticleListItemProps) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <Link\r\n          to={`/articles/${article.id}`}\r\n          style={{ textDecoration: \"none\", color: \"initial\" }}\r\n        >\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={article.urlToImage}\r\n            component=\"img\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {article.title}\r\n            </Typography>\r\n            <Typography variant=\"h5\" color=\"textSecondary\" component=\"p\">\r\n              {ISOdateToUIformat(article.publishedAt)}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {article.description}\r\n            </Typography>\r\n          </CardContent>\r\n        </Link>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ArticleListItem;\r\n","import ArticleListItem from './article-list-item';\r\n\r\nexport default ArticleListItem;","import { Article } from \"../entities/Article\";\r\n\r\nexport default class ArticleService {\r\n  apiKey = \"354d6c6676cf477683e5b3651d76321c\";\r\n  currentDate = \"2020-02-01\";\r\n\r\n  async getResource(\r\n    query: string,\r\n    pageSize: number = 5,\r\n    page: number = 1,\r\n    from: string,\r\n    to: string\r\n  ) {\r\n    let apiURL = `https://newsapi.org/v2/everything?q=${query}&from=${from}&to=${to}&sortBy=publishedAt&apiKey=${this.apiKey}&pageSize=${pageSize}&page=${page}`;\r\n    console.log(`fetch ${apiURL}`);\r\n    const res = await fetch(apiURL);\r\n    if (!res.ok) {\r\n      throw new Error(`Could not ferch ${apiURL}` + `, received ${res.status}`);\r\n    }\r\n    const body = await res.json();\r\n    return body;\r\n  }\r\n\r\n  getArticles = async (\r\n    query: string,\r\n    pageSize: number,\r\n    page: number,\r\n    from: string,\r\n    to: string\r\n  ) => {\r\n    const res = await this.getResource(query, pageSize, page, from, to);\r\n    console.log(\r\n      \"res.articles.map(this._transformArticles)\",\r\n      res.articles.map(this._transformArticles)\r\n    );\r\n    return {\r\n      totalArticles: res.totalResults,\r\n      articles: res.articles.map(this._transformArticles)\r\n    };\r\n  };\r\n\r\n  _transformArticles = (article: any): Article => {\r\n    return {\r\n      id:\r\n        \"_\" +\r\n        Math.random()\r\n          .toString(36)\r\n          .substr(2, 9),\r\n      title: article.title,\r\n      description: article.description,\r\n      urlToImage: article.urlToImage,\r\n      publishedAt: article.publishedAt,\r\n      content: article.content\r\n    };\r\n  };\r\n}\r\n","import * as React from \"react\";\r\nimport ArticleService from \"./article-service\";\r\n\r\ninterface AppContextInterface {\r\n  articleService: ArticleService;\r\n}\r\n\r\nconst {\r\n  Provider: ArticleServiceProvider,\r\n  Consumer: ArticleServiceConsumer\r\n} = React.createContext<AppContextInterface | null>({articleService: new ArticleService()});\r\n\r\nexport { ArticleServiceProvider, ArticleServiceConsumer };\r\n","import { withArticleService } from \"./with-article-service\";\r\n\r\nexport default withArticleService;\r\n","import * as React from \"react\";\r\nimport { ArticleServiceConsumer } from \"../../services/article-service-context\";\r\n\r\nconst withArticleService = (Wrapped: React.FC): React.FC => {\r\n  return (props: any): any => {\r\n    return (\r\n      <ArticleServiceConsumer>\r\n        {articleService => {\r\n          return (\r\n            <Wrapped\r\n              {...props}\r\n              articleService={articleService?.articleService}\r\n            ></Wrapped>\r\n          );\r\n        }}\r\n      </ArticleServiceConsumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport { withArticleService };\r\n","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from \"react\";\r\n\r\nimport \"./spinner.css\";\r\nimport spinner from \"./spinner.svg\";\r\n\r\nconst Spinner = () => {\r\n  return <object type=\"image/svg+xml\" data={spinner}/>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\n\r\nimport ArticleListItem from \"../article-list-item\";\r\nimport withBookstoreService from \"../hoc\";\r\nimport { fetchArticles } from \"../../actions\";\r\nimport { Article } from \"../../entities/Article\";\r\nimport { StoreStructure } from \"../../entities/StoreStructure\";\r\nimport Spinner from \"../spinner\";\r\n\r\nimport \"./article-list.css\";\r\n\r\ninterface IArticleListProps {\r\n  items: JSX.Element[];\r\n  totalArticles: number;\r\n  page: number;\r\n  pageSize: number;\r\n  loadMoreArticles: (page: number) => void;\r\n}\r\n\r\nconst ArticleList = ({\r\n  items,\r\n  loadMoreArticles,\r\n  totalArticles,\r\n  page,\r\n  pageSize\r\n}: IArticleListProps) => {\r\n  return (\r\n    <InfiniteScroll\r\n      pageStart={1}\r\n      hasMore={page * pageSize < totalArticles || page === 1 ? true : false}\r\n      useWindow={true}\r\n      loadMore={loadMoreArticles}\r\n      loader={<Spinner/>}\r\n    >\r\n      {items}\r\n    </InfiniteScroll>\r\n  );\r\n};\r\n\r\ninterface IArticleListContainerProps {\r\n  articles: Article[];\r\n  totalArticles: number;\r\n  q: string;\r\n  pageSize: number;\r\n  page: number;\r\n  from: string;\r\n  to: string;\r\n  error: string;\r\n  fetchArticles: (\r\n    query: string,\r\n    pageSize: number,\r\n    page: number,\r\n    from: string,\r\n    to: string\r\n  ) => void;\r\n}\r\n\r\nclass ArticleListContainer extends Component<IArticleListContainerProps> {\r\n  componentDidMount() {}\r\n  getArticleListItems = (): JSX.Element[] => {\r\n    let res: JSX.Element[] = [];\r\n    this.props.articles.map(function(item, id) {\r\n      res.push(<ArticleListItem article={item} key={id} />);\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  getPageNews() {\r\n    return (page: number) => {\r\n      console.log(\"page\", this.props.page);\r\n      this.props.fetchArticles(\r\n        this.props.q,\r\n        this.props.pageSize,\r\n        this.props.page,\r\n        this.props.from,\r\n        this.props.to\r\n      );\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.props.error) {\r\n      return <div>Error</div>;\r\n    }\r\n\r\n    return (\r\n      <ArticleList\r\n        items={this.getArticleListItems()}\r\n        loadMoreArticles={this.getPageNews()}\r\n        totalArticles={this.props.totalArticles}\r\n        page={this.props.page}\r\n        pageSize={this.props.pageSize}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  articleList: {\r\n    articles,\r\n    totalArticles,\r\n    articlesQuertyParams: { q, pageSize, page, from, to },\r\n    error\r\n  }\r\n}: StoreStructure): any => {\r\n  return { articles, totalArticles, q, pageSize, page, from, to, error };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any, { articleService }: any) => {\r\n  return {\r\n    fetchArticles: fetchArticles(articleService, dispatch)\r\n  };\r\n};\r\n\r\nexport default withBookstoreService(\r\n  connect(mapStateToProps, mapDispatchToProps)(ArticleListContainer)\r\n);\r\n","import HomePage from './article-list';\r\n\r\nexport default HomePage;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nimport { setQuertyToState } from \"../../actions\";\r\nimport { setFromDateToState, setToDateToState } from \"../../actions\";\r\nimport { StoreStructure } from \"../../entities/StoreStructure\";\r\nimport { ISOdateToDatepickerFormat } from \"../../utils/date-service\";\r\n\r\nimport \"./article-filter.css\";\r\n\r\ninterface ArticleFilterType {\r\n  from: string;\r\n  fromDateOnChange: (event: string) => void;\r\n  to: string;\r\n  toDateOnChange: (event: string) => void;\r\n}\r\n\r\nclass ArticleFilter extends Component<ArticleFilterType> {\r\n  render() {\r\n    let { from, to } = this.props;\r\n    let dateFrom = ISOdateToDatepickerFormat(from);\r\n    let dateTo = ISOdateToDatepickerFormat(to);\r\n\r\n    return (\r\n      <form>\r\n        <TextField\r\n          id=\"dateFromInput\"\r\n          label=\"Date from\"\r\n          type=\"date\"\r\n          defaultValue={dateFrom}\r\n          onChange={event => this.props.fromDateOnChange(event.target.value)}\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n        />\r\n        <TextField\r\n          id=\"dateToInput\"\r\n          label=\"Date to\"\r\n          type=\"date\"\r\n          defaultValue={dateTo}\r\n          onChange={event => this.props.toDateOnChange(event.target.value)}\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\ninterface IArticleFilterContainerProps {\r\n  from: string;\r\n  setFromDateToState: (FromDate: string) => void;\r\n  to: string;\r\n  setToDateToState: (toDate: string) => void;\r\n\r\n}\r\n\r\nexport class ArticleFilterContainer extends Component<\r\n  IArticleFilterContainerProps\r\n> {\r\n  toDateChange() {\r\n    return (toDate: string) => {\r\n      this.props.setToDateToState(toDate);\r\n    };\r\n  }\r\n\r\n  fromDateChange() {\r\n    return (fromDate: string) => {\r\n      this.props.setFromDateToState(fromDate);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { from, to } = this.props;\r\n    return (\r\n      <ArticleFilter\r\n        from={from}\r\n        to={to}\r\n        fromDateOnChange={this.fromDateChange()}\r\n        toDateOnChange={this.toDateChange()}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  articleList: {\r\n    articlesQuertyParams: { from, to }\r\n  }\r\n}: StoreStructure): any => {\r\n  return { from, to };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any, { articleService }: any) => {\r\n  return {\r\n    setQuertyToState: setQuertyToState(dispatch),\r\n    setFromDateToState: setFromDateToState(dispatch),\r\n    setToDateToState: setToDateToState(dispatch)\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ArticleFilterContainer);\r\n","import ArticleFilter from './article-filter';\r\n\r\nexport default ArticleFilter;","import React from \"react\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport ArticleList from \"../article-list\";\r\nimport ArticleFilter from \"../article-filter\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Container maxWidth=\"lg\">\r\n        <ArticleFilter />\r\n        <ArticleList />\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\n\r\nconst AboutPage = () => {\r\n  return <div>AboutPage</div>;\r\n};\r\n\r\nexport default AboutPage;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { TextField, Switch, FormControlLabel } from \"@material-ui/core\";\r\n\r\nimport { StoreStructure } from \"../../entities/StoreStructure\";\r\nimport { setPageSizeToState, changeTheme, changeFontSize } from \"../../actions\";\r\n\r\ninterface SettingsPanelType {\r\n  pageSize: number;\r\n  darkTheme: boolean;\r\n  fontSize: number;\r\n  setQuertyToState: (pageSize: number) => void;\r\n  changeFontSize: (fontSize: number) => void;\r\n  changeTheme: () => void;\r\n}\r\n\r\nexport class SettingsPanel extends Component<SettingsPanelType> {\r\n  render() {\r\n    return (\r\n      <form noValidate>\r\n        <TextField\r\n          id=\"number-of-loaded-items-input\"\r\n          label=\"Number of loaded items\"\r\n          variant=\"outlined\"\r\n          value={this.props.pageSize.toString()}\r\n          onChange={event => this.props.setQuertyToState(+event.target.value)}\r\n        />\r\n        <TextField\r\n          id=\"font-size-input\"\r\n          label=\"Font size\"\r\n          variant=\"outlined\"\r\n          value={this.props.fontSize.toString()}\r\n          onChange={event => this.props.changeFontSize(+event.target.value)}\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={this.props.darkTheme}\r\n              onChange={this.props.changeTheme}\r\n              value=\"DarkTheme\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Dark theme\"\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  articleList: {\r\n    articlesQuertyParams: { pageSize }\r\n  },\r\n  uiParams: { darkTheme, fontSize }\r\n}: StoreStructure): any => {\r\n  return { pageSize, darkTheme, fontSize };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any, { articleService }: any) => {\r\n  return {\r\n    setQuertyToState: setPageSizeToState(dispatch),\r\n    changeTheme: changeTheme(dispatch),\r\n    changeFontSize: changeFontSize(dispatch)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPanel);\r\n","import SettingsPanel from './settings-panel'\r\n\r\nexport default SettingsPanel;","import React from \"react\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport SettingsPanel from \"../settings-panel\";\r\n\r\nconst SettingsPage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Container maxWidth=\"lg\">\r\n        <SettingsPanel />\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import React from \"react\";\r\n\r\nconst HelpPage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div>HelpPage</div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HelpPage;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./article-full.css\";\r\nimport { StoreStructure } from \"../../entities/StoreStructure\";\r\nimport { Article } from \"../../entities/Article\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardActions,\r\n  CardContent,\r\n  Typography,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport { ISOdateToUIformat } from \"../../utils/date-service\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 845,\r\n    marginBottom: 50\r\n  },\r\n  media: {}\r\n});\r\n\r\ninterface ArticleFullType {\r\n  articles: Article[];\r\n}\r\n\r\nconst ArticleFull = ({ articles }: ArticleFullType) => {\r\n  let { id } = useParams();\r\n  let article = articles.find(item => item.id === id);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={article?.urlToImage}\r\n        component=\"img\"\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {article?.title}\r\n        </Typography>\r\n        <Typography variant=\"h5\" color=\"textSecondary\" component=\"p\">\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n          {article?.content}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  articleList: { articles }\r\n}: StoreStructure): any => {\r\n  return {\r\n    articles\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ArticleFull);\r\n","import ArticleFull from \"./article-full\";\r\n\r\nexport default ArticleFull;\r\n","import App from './app'\r\n\r\nexport default App;","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Layout from \"../pages/layout\";\r\nimport { HomePage, AboutPage, SettingsPage, HelpPage } from \"../pages\";\r\n\r\nimport \"./app.css\";\r\nimport ArticleFull from \"../article-full\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n        <Route path=\"/\" component={HomePage} exact />\r\n        <Route path=\"/articles/:id\" component={ArticleFull}/>\r\n        <Route path=\"/settings\" component={SettingsPage} exact />\r\n        <Route path=\"/help\" component={HelpPage} exact />\r\n        <Route path=\"/about\" component={AboutPage} exact />\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {\r\n  FETCH_ARTICLE_REQUEST,\r\n  FETCH_ARTICLE_SUCCESS,\r\n  FETCH_ARTICLE_FAILURE,\r\n  FETCH_ARTICLE_SUCCESS_EMPTY_RESULT,\r\n  SET_ARTICLE_QUERTY_PARAMS,\r\n  QUERTY_INPUT_CHANGE,\r\n  FROM_DATE_CHANGE,\r\n  TO_DATE_CHANGE,\r\n  PAGE_SIZE_CHANGE\r\n} from \"../actions/actions\";\r\nimport { StoreStructure, articleListType } from \"../entities/StoreStructure\";\r\nimport { ActionType } from \"../entities/Actions\";\r\nimport moment from \"moment\";\r\nimport { DatepickerDateToISOformat } from \"../utils/date-service\";\r\n\r\n// var moment = require(\"moment\");\r\n\r\nlet toDate: string = moment().toISOString();\r\nlet fromDate: string = moment()\r\n  .day(0)\r\n  .toISOString();\r\n\r\nconst initialState: articleListType = {\r\n  articles: [],\r\n  totalArticles: 0,\r\n  articlesQuertyParams: {\r\n    q: \"bitcoin\",\r\n    pageSize: 5,\r\n    page: 1,\r\n    from: fromDate,\r\n    to: toDate\r\n  },\r\n  loading: true,\r\n  error: null\r\n};\r\nconsole.log(\"From: \", initialState.articlesQuertyParams.from);\r\nconsole.log(\"To: \", initialState.articlesQuertyParams.to);\r\nexport const upateArticle = (\r\n  state: StoreStructure,\r\n  action: ActionType\r\n): articleListType => {\r\n  if (state === undefined) return initialState;\r\n\r\n  switch (action.type) {\r\n    case FETCH_ARTICLE_REQUEST:\r\n      console.log(FETCH_ARTICLE_REQUEST);\r\n      return {\r\n        ...state.articleList,\r\n        articlesQuertyParams: {\r\n          page: 1,\r\n          q: action.payload.q,\r\n          ...state.articleList.articlesQuertyParams\r\n        },\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case FETCH_ARTICLE_SUCCESS:\r\n      console.log(FETCH_ARTICLE_SUCCESS);\r\n      console.log(action.payload);\r\n      return {\r\n        ...state.articleList,\r\n        articlesQuertyParams: {\r\n          ...state.articleList.articlesQuertyParams,\r\n          page: state.articleList.articlesQuertyParams.page + 1\r\n        },\r\n        articles: state.articleList.articles.concat(action.payload.articles),\r\n        totalArticles: action.payload.totalArticles,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case FETCH_ARTICLE_SUCCESS_EMPTY_RESULT:\r\n      console.log(FETCH_ARTICLE_SUCCESS_EMPTY_RESULT);\r\n      return {\r\n        ...state.articleList,\r\n        articles: [],\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case FETCH_ARTICLE_FAILURE:\r\n      console.log(FETCH_ARTICLE_FAILURE);\r\n      return {\r\n        ...state.articleList,\r\n        articles: [],\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case SET_ARTICLE_QUERTY_PARAMS:\r\n      console.log(SET_ARTICLE_QUERTY_PARAMS);\r\n      return {\r\n        ...state.articleList,\r\n        articles: [],\r\n        articlesQuertyParams: {\r\n          ...action.payload\r\n        }\r\n      };\r\n\r\n    case QUERTY_INPUT_CHANGE:\r\n      console.log(QUERTY_INPUT_CHANGE);\r\n      return {\r\n        ...state.articleList,\r\n        articles: [],\r\n        articlesQuertyParams: {\r\n          ...state.articleList.articlesQuertyParams,\r\n          q: action.payload\r\n        }\r\n      };\r\n\r\n    case FROM_DATE_CHANGE:\r\n      console.log(FROM_DATE_CHANGE);\r\n      return {\r\n        ...state.articleList,\r\n        articles: [],\r\n        articlesQuertyParams: {\r\n          ...state.articleList.articlesQuertyParams,\r\n          page: 1,\r\n          from: DatepickerDateToISOformat(action.payload)\r\n        }\r\n      };\r\n\r\n    case TO_DATE_CHANGE:\r\n      console.log(TO_DATE_CHANGE);\r\n      return {\r\n        ...state.articleList,\r\n        articles: [],\r\n        articlesQuertyParams: {\r\n          ...state.articleList.articlesQuertyParams,\r\n          page: 1,\r\n          to: DatepickerDateToISOformat(action.payload)\r\n        }\r\n      };\r\n\r\n    case PAGE_SIZE_CHANGE:\r\n      console.log(PAGE_SIZE_CHANGE);\r\n      return {\r\n        ...state.articleList,\r\n        articles: [],\r\n        articlesQuertyParams: {\r\n          ...state.articleList.articlesQuertyParams,\r\n          page: 1,\r\n          pageSize: action.payload\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state.articleList;\r\n  }\r\n};\r\n","import { THEME_CHANGE, FONT_SIZE_CHANGE } from \"../actions/actions\";\r\n\r\nimport { uiParamsType, StoreStructure } from \"../entities/StoreStructure\";\r\nimport { ActionType } from \"../entities/Actions\";\r\nconst initialState: uiParamsType = {\r\n  darkTheme: false,\r\n  fontSize: 12\r\n};\r\n\r\nexport const upateUIparams = (\r\n  state: StoreStructure,\r\n  action: ActionType\r\n): uiParamsType => {\r\n  if (state === undefined) return initialState;\r\n\r\n  switch (action.type) {\r\n    case THEME_CHANGE:\r\n      console.log(THEME_CHANGE);\r\n\r\n      return {\r\n        ...state.uiParams,\r\n        darkTheme: !state.uiParams.darkTheme\r\n      };\r\n\r\n    case FONT_SIZE_CHANGE:\r\n      console.log(FONT_SIZE_CHANGE);\r\n\r\n      return {\r\n        ...state.uiParams,\r\n        fontSize: action.payload\r\n      };\r\n\r\n    default:\r\n      return state.uiParams;\r\n  }\r\n};\r\n","import {createStore} from 'redux'\r\n\r\nimport {reducer} from './reducers/index';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import { upateArticle } from \"./article\";\r\nimport { upateUIparams } from \"./uiParams\";\r\nimport { StoreStructure } from \"../entities/StoreStructure\";\r\nimport { ActionType } from \"../entities/Actions\";\r\n\r\nconst reducer = (state: any, action: ActionType): StoreStructure => {\r\n  return {\r\n    articleList: upateArticle(state, action),\r\n    uiParams: upateUIparams(state, action)\r\n  };\r\n};\r\n\r\nexport { reducer };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"./components/app\";\nimport store from \"./store\";\nimport ArticleService from \"./services/article-service\";\nimport { ArticleServiceProvider } from \"./services/article-service-context\";\n\nimport \"./index.css\";\n\n\n\n\nconst articleService = new ArticleService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ArticleServiceProvider value={{articleService}}>\n      <Router>\n        <App />\n      </Router>\n    </ArticleServiceProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/spinner.3b84cf99.svg\";"],"sourceRoot":""}