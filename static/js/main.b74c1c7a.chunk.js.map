{"version":3,"sources":["serviceWorker.ts","data-structures/navigation-list.tsx","components/pages/layout.tsx","utils/date-service.ts","components/article-list-item/article-list-item.tsx","components/article-list-item/index.ts","services/article-service.ts","services/article-service-context.ts","components/hoc/index.ts","components/hoc/with-article-service.tsx","actions/index.ts","actions/action-creators.ts","actions/actions.ts","components/spinner/index.ts","components/spinner/spinner.tsx","components/article-list/article-list.tsx","components/article-list/index.ts","components/article-filter/article-filter.tsx","components/article-filter/index.ts","components/pages/home-page.tsx","components/map/map.tsx","components/map/index.ts","components/pages/about-page.tsx","components/settings-panel/settings-panel.tsx","components/settings-panel/index.ts","components/pages/settings-page.tsx","components/pages/help-page.tsx","components/article-full/article-full.tsx","components/article-full/index.ts","components/app/index.ts","components/app/app.tsx","reducers/article.ts","reducers/uiParams.ts","store.ts","reducers/index.ts","index.tsx","components/spinner/spinner.svg"],"names":["Boolean","window","location","hostname","match","navigationList","title","link","process","icon","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","connect","uiParams","darkTheme","fontSize","dispatch","articleService","props","classes","useTheme","globalTheme","createMuiTheme","palette","primary","light","amber","main","dark","type","typography","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","className","Divider","List","map","item","id","to","key","style","textDecoration","color","ListItem","button","ListItemIcon","ListItemText","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","children","ISOdateToDatepickerFormat","date","moment","ISO_8601","format","DatepickerDateToISOformat","maxWidth","marginBottom","media","ArticleListItem","article","Card","CardActionArea","CardMedia","image","urlToImage","component","CardContent","gutterBottom","publishedAt","description","ArticleService","apiKey","currentDate","getArticles","query","pageSize","page","from","a","getResource","res","console","log","articles","_transformArticles","totalArticles","totalResults","Math","random","toString","substr","apiURL","this","fetch","ok","Error","status","json","body","ArticleServiceProvider","Provider","ArticleServiceConsumer","Consumer","withArticleService","Wrapped","fetchArticles","payload","q","actionCreators","then","data","catch","err","setFromDateToState","fromDate","setToDateToState","toDate","setPageSizeToState","setQuertyToState","changeTheme","changeFontSize","Spinner","spinner","ArticleList","items","loadMoreArticles","pageStart","hasMore","useWindow","loadMore","loader","ArticleListContainer","getArticleListItems","push","error","getPageNews","Component","HomePage","withBookstoreService","articleList","articlesQuertyParams","ArticleFilter","dateFrom","dateTo","TextField","label","defaultValue","onChange","event","fromDateOnChange","target","value","InputLabelProps","shrink","toDateOnChange","ArticleFilterContainer","fromDateChange","toDateChange","Fragment","Container","MapboxMap","ReactMapboxGl","accessToken","Map","containerStyle","height","center","zoom","coordinates","AboutPage","SettingsPanel","noValidate","FormControlLabel","control","Switch","checked","SettingsPage","HelpPage","ArticleFull","useParams","find","App","path","exact","day","toISOString","initialState","loading","upateArticle","state","action","undefined","concat","upateUIparams","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b74c1c7a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\n\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\n\r\nexport const navigationList: navigationListType[] = [\r\n  { title: \"News\", link: process.env.PUBLIC_URL + \"/\", icon: <InboxIcon /> },\r\n  {\r\n    title: \"Settings\",\r\n    link: process.env.PUBLIC_URL + \"/settings\",\r\n    icon: <SettingsIcon />\r\n  },\r\n  {\r\n    title: \"Help\",\r\n    link: process.env.PUBLIC_URL + \"/help\",\r\n    icon: <HelpOutlineIcon />\r\n  },\r\n  {\r\n    title: \"About\",\r\n    link: process.env.PUBLIC_URL + \"/about\",\r\n    icon: <InfoIcon />\r\n  }\r\n];\r\n\r\ninterface navigationListType {\r\n  title: string;\r\n  link: string;\r\n  icon: JSX.Element;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  AppBar,\r\n  CssBaseline,\r\n  Divider,\r\n  Hidden,\r\n  IconButton,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Toolbar,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport {\r\n  makeStyles,\r\n  useTheme,\r\n  createMuiTheme,\r\n  MuiThemeProvider\r\n} from \"@material-ui/core/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport amber from \"@material-ui/core/colors/amber\";\r\n\r\nimport { StoreStructure } from \"../../entities/StoreStructure\";\r\nimport { navigationList } from \"../../data-structures/navigation-list\";\r\n\r\nconst drawerWidth = 320;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0\r\n    }\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth\r\n    }\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3)\r\n  }\r\n}));\r\n\r\ninterface LayoutType {\r\n  darkTheme: boolean;\r\n  fontSize: number;\r\n  children: any;\r\n}\r\n\r\nfunction Layout(props: LayoutType): any {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const globalTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        light: amber[600],\r\n        main: amber[500],\r\n        dark: amber[400]\r\n      },\r\n      type: props.darkTheme ? \"dark\" : \"light\"\r\n    },\r\n    typography: {\r\n      fontSize: props.fontSize\r\n    }\r\n  });\r\n\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        {navigationList.map((item, id) => (\r\n          <Link\r\n            to={item.link}\r\n            key={id}\r\n            style={{ textDecoration: \"none\", color: \"initial\" }}\r\n          >\r\n            <ListItem button key={item.title}>\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.title} />\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <MuiThemeProvider theme={globalTheme}>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n              News App\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n          <Hidden smUp implementation=\"css\">\r\n            <Drawer\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n              open={mobileOpen}\r\n              onClose={handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper\r\n              }}\r\n              ModalProps={{\r\n                keepMounted: true // Better open performance on mobile.\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          {props.children}\r\n        </main>\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  uiParams: { darkTheme, fontSize }\r\n}: StoreStructure): any => {\r\n  return { darkTheme, fontSize };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any, { articleService }: any) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\r\n","import moment from \"moment\";\r\n\r\nexport const ISOdateToDatepickerFormat = (date: string) => {\r\n  let datepickerFormat: string = \"YYYY-MM-DD\";\r\n  return moment(date, moment.ISO_8601).format(datepickerFormat);\r\n};\r\n\r\nexport const ISOdateToUIformat = (date: string) => {\r\n  let UIformat: string = \"DD MMMM YYYY\";\r\n  return moment(date, moment.ISO_8601).format(UIformat);\r\n};\r\n\r\nexport const DatepickerDateToISOformat = (date: string) => {\r\n  let datepickerFormat: string = \"YYYY-MM-DD\";\r\n  return moment(date, datepickerFormat).format(\"YYYY-MM-DDTHH:mm:ss\");\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\n\r\nimport { Article } from \"../../entities/Article\";\r\nimport { ISOdateToUIformat } from \"../../utils/date-service\";\r\n\r\ninterface IArticleListItemProps {\r\n  article: Article;\r\n}\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 845,\r\n    marginBottom: 50\r\n  },\r\n  media: {}\r\n});\r\n\r\nconst ArticleListItem = ({ article }: IArticleListItemProps) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <Link\r\n          to={`/articles/${article.id}`}\r\n          style={{ textDecoration: \"none\", color: \"initial\" }}\r\n        >\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={article.urlToImage}\r\n            component=\"img\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {article.title}\r\n            </Typography>\r\n            <Typography variant=\"h5\" color=\"textSecondary\" component=\"p\">\r\n              {ISOdateToUIformat(article.publishedAt)}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {article.description}\r\n            </Typography>\r\n          </CardContent>\r\n        </Link>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ArticleListItem;\r\n","import ArticleListItem from './article-list-item';\r\n\r\nexport default ArticleListItem;","import { Article } from \"../entities/Article\";\r\n\r\nexport default class ArticleService {\r\n  apiKey = \"354d6c6676cf477683e5b3651d76321c\";\r\n  currentDate = \"2020-02-01\";\r\n\r\n  async getResource(\r\n    query: string,\r\n    pageSize: number = 5,\r\n    page: number = 1,\r\n    from: string,\r\n    to: string\r\n  ) {\r\n    let apiURL = `https://newsapi.org/v2/everything?q=${query}&from=${from}&to=${to}&sortBy=publishedAt&apiKey=${this.apiKey}&pageSize=${pageSize}&page=${page}`;\r\n    console.log(`fetch ${apiURL}`);\r\n    const res = await fetch(apiURL);\r\n    if (!res.ok) {\r\n      throw new Error(`Could not ferch ${apiURL}, received ${res.status}`);\r\n    }\r\n    const body = await res.json();\r\n    return body;\r\n  }\r\n\r\n  getArticles = async (\r\n    query: string,\r\n    pageSize: number,\r\n    page: number,\r\n    from: string,\r\n    to: string\r\n  ) => {\r\n    const res = await this.getResource(query, pageSize, page, from, to);\r\n    console.log(\r\n      \"res.articles.map(this._transformArticles)\",\r\n      res.articles.map(this._transformArticles)\r\n    );\r\n    return {\r\n      totalArticles: res.totalResults,\r\n      articles: res.articles.map(this._transformArticles)\r\n    };\r\n  };\r\n\r\n  _transformArticles = (article: any): Article => {\r\n    return {\r\n      id:\r\n        \"_\" +\r\n        Math.random()\r\n          .toString(36)\r\n          .substr(2, 9),\r\n      title: article.title,\r\n      description: article.description,\r\n      urlToImage: article.urlToImage,\r\n      publishedAt: article.publishedAt,\r\n      content: article.content\r\n    };\r\n  };\r\n}\r\n","import * as React from \"react\";\r\nimport ArticleService from \"./article-service\";\r\n\r\ninterface AppContextInterface {\r\n  articleService: ArticleService;\r\n}\r\n\r\nconst {\r\n  Provider: ArticleServiceProvider,\r\n  Consumer: ArticleServiceConsumer\r\n} = React.createContext<AppContextInterface | null>({articleService: new ArticleService()});\r\n\r\nexport { ArticleServiceProvider, ArticleServiceConsumer };\r\n","import { withArticleService } from \"./with-article-service\";\r\n\r\nexport default withArticleService;\r\n","import * as React from \"react\";\r\nimport { ArticleServiceConsumer } from \"../../services/article-service-context\";\r\n\r\nconst withArticleService = (Wrapped: React.FC): React.FC => {\r\n  return (props: any): any => {\r\n    return (\r\n      <ArticleServiceConsumer>\r\n        {articleService => {\r\n          return (\r\n            <Wrapped\r\n              {...props}\r\n              articleService={articleService?.articleService}\r\n            ></Wrapped>\r\n          );\r\n        }}\r\n      </ArticleServiceConsumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport { withArticleService };\r\n","import ArticleService from \"../services/article-service\";\r\nimport { articlesQuertyParamsType } from \"../entities/StoreStructure\";\r\nimport * as actionCreators from \"./action-creators\";\r\n\r\nexport const fetchArticles = (\r\n  articleService: ArticleService,\r\n  dispatch: any\r\n) => (\r\n  query: string,\r\n  pageSize: number,\r\n  page: number,\r\n  from: string,\r\n  to: string\r\n) => {\r\n  dispatch(actionCreators.articleRequested(query));\r\n\r\n  articleService\r\n    .getArticles(query, pageSize, page, from, to)\r\n    .then(data => {\r\n      dispatch(actionCreators.articleLoaded(data));\r\n    })\r\n    .catch(err => dispatch(actionCreators.articleError(err)));\r\n};\r\n\r\nexport const setArticlesQuertyParamsFunc = (dispatch: any) => (\r\n  params: articlesQuertyParamsType\r\n) => {\r\n  dispatch(actionCreators.setArticlesQuertyParams(params));\r\n};\r\n\r\nexport const setFromDateToState = (dispatch: any) => (fromDate: string) => {\r\n  dispatch(actionCreators.fromDateChange(fromDate));\r\n};\r\n\r\nexport const setToDateToState = (dispatch: any) => (toDate: string) => {\r\n  dispatch(actionCreators.toDateChange(toDate));\r\n};\r\n\r\nexport const setPageSizeToState = (dispatch: any) => (pageSize: number) => {\r\n  dispatch(actionCreators.pageSizeChange(pageSize));\r\n};\r\n\r\nexport const setQuertyToState = (dispatch: any) => (q: string) => {\r\n  dispatch(actionCreators.setQuerty(q));\r\n};\r\n\r\nexport const changeTheme = (dispatch: any) => () => {\r\n  dispatch(actionCreators.themeChange());\r\n};\r\n\r\nexport const changeFontSize = (dispatch: any) => (fontSize: number) => {\r\n  dispatch(actionCreators.fontSizeChange(fontSize));\r\n};\r\n","import * as actions from './actions'\r\nimport { articlesQuertyParamsType } from \"../entities/StoreStructure\";\r\n\r\nexport const articleRequested = (query: string): ArticleActionType => {\r\n  return {\r\n    type: actions.FETCH_ARTICLE_REQUEST,\r\n    payload: { q: query }\r\n  };\r\n};\r\n\r\nexport const articleLoaded = (newArticles: any): ArticleActionType => {\r\n  return {\r\n    type: actions.FETCH_ARTICLE_SUCCESS,\r\n    payload: newArticles\r\n  };\r\n};\r\n\r\nexport const articleLoadedEmptyResult = (): ArticleActionType => {\r\n  return {\r\n    type: actions.FETCH_ARTICLE_SUCCESS_EMPTY_RESULT\r\n  };\r\n};\r\n\r\nexport const articleError = (error: string): ArticleActionType => {\r\n  return {\r\n    type: actions.FETCH_ARTICLE_FAILURE,\r\n    payload: error\r\n  };\r\n};\r\n\r\nexport const setArticlesQuertyParams = (\r\n  params: articlesQuertyParamsType\r\n): ArticleActionType => {\r\n  return {\r\n    type: actions.SET_ARTICLE_QUERTY_PARAMS,\r\n    payload: params\r\n  };\r\n};\r\n\r\nexport const setQuerty = (querty: string): ArticleActionType => {\r\n  return {\r\n    type: actions.QUERTY_INPUT_CHANGE,\r\n    payload: querty\r\n  };\r\n};\r\n\r\nexport const fromDateChange = (fromDate: string): ArticleActionType => {\r\n  return {\r\n    type: actions.FROM_DATE_CHANGE,\r\n    payload: fromDate\r\n  };\r\n};\r\n\r\nexport const toDateChange = (toDate: string): ArticleActionType => {\r\n  return {\r\n    type: actions.TO_DATE_CHANGE,\r\n    payload: toDate\r\n  };\r\n};\r\n\r\nexport const pageSizeChange = (pageSize: number): ArticleActionType => {\r\n  return {\r\n    type: actions.PAGE_SIZE_CHANGE,\r\n    payload: pageSize\r\n  };\r\n};\r\n\r\nexport const themeChange = (): ArticleActionType => {\r\n  return {\r\n    type: actions.THEME_CHANGE\r\n  };\r\n};\r\n\r\nexport const fontSizeChange = (fontSize: number): ArticleActionType => {\r\n  return {\r\n    type: actions.FONT_SIZE_CHANGE,\r\n    payload: fontSize\r\n  };\r\n};\r\n\r\ninterface ActionTypeBase {\r\n  type: string;\r\n}\r\n\r\ninterface ArticleActionType extends ActionTypeBase {\r\n  payload?: any;\r\n}\r\n","export const FETCH_ARTICLE_REQUEST = \"FETCH_ARTICLE_REQUEST\";\r\nexport const FETCH_ARTICLE_SUCCESS = \"FETCH_ARTICLE_SUCCESS\";\r\nexport const FETCH_ARTICLE_SUCCESS_EMPTY_RESULT = \"FETCH_ARTICLE_EMPTY_RESULT\";\r\nexport const FETCH_ARTICLE_FAILURE = \"FETCH_ARTICLE_FAILURE\";\r\n\r\nexport const SET_ARTICLE_QUERTY_PARAMS = \"SET_ARTICLE_QUERTY_PARAMS\";\r\n\r\nexport const QUERTY_INPUT_CHANGE = \"QUERTY_INPUT_CHANGE\";\r\nexport const FROM_DATE_CHANGE = \"FROM_DATE_CHANGE\";\r\nexport const TO_DATE_CHANGE = \"TO_DATE_CHANGE\";\r\n\r\nexport const PAGE_SIZE_CHANGE = \"PAGE_SIZE_CHANGE\";\r\nexport const THEME_CHANGE = \"THEME_CHANGE\"\r\nexport const FONT_SIZE_CHANGE = \"FONT_SIZE_CHANGE\"\r\n","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from \"react\";\r\n\r\nimport spinner from \"./spinner.svg\";\r\n\r\nconst Spinner = () => {\r\n  return <object type=\"image/svg+xml\" data={spinner}/>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\n\r\nimport ArticleListItem from \"../article-list-item\";\r\nimport withBookstoreService from \"../hoc\";\r\nimport { fetchArticles } from \"../../actions\";\r\nimport { Article } from \"../../entities/Article\";\r\nimport { StoreStructure } from \"../../entities/StoreStructure\";\r\nimport Spinner from \"../spinner\";\r\n\r\n\r\ninterface IArticleListProps {\r\n  items: JSX.Element[];\r\n  totalArticles: number;\r\n  page: number;\r\n  pageSize: number;\r\n  loadMoreArticles: (page: number) => void;\r\n}\r\n\r\nconst ArticleList = ({\r\n  items,\r\n  loadMoreArticles,\r\n  totalArticles,\r\n  page,\r\n  pageSize\r\n}: IArticleListProps) => {\r\n  return (\r\n    <InfiniteScroll\r\n      pageStart={1}\r\n      hasMore={page * pageSize < totalArticles || page === 1 ? true : false}\r\n      useWindow={true}\r\n      loadMore={loadMoreArticles}\r\n      loader={<Spinner key={page} />}\r\n      key={page}\r\n    >\r\n      {items}\r\n    </InfiniteScroll>\r\n  );\r\n};\r\n\r\ninterface IArticleListContainerProps {\r\n  articles: Article[];\r\n  totalArticles: number;\r\n  q: string;\r\n  pageSize: number;\r\n  page: number;\r\n  from: string;\r\n  to: string;\r\n  error: string;\r\n  fetchArticles: (\r\n    query: string,\r\n    pageSize: number,\r\n    page: number,\r\n    from: string,\r\n    to: string\r\n  ) => void;\r\n}\r\n\r\nclass ArticleListContainer extends Component<IArticleListContainerProps> {\r\n  componentDidMount() {}\r\n  getArticleListItems = (): JSX.Element[] => {\r\n    let res: JSX.Element[] = [];\r\n    this.props.articles.map((item, id) => {\r\n      return res.push(<ArticleListItem article={item} key={item.id} />);\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  getPageNews() {\r\n    return (page: number) => {\r\n      console.log(\"page\", this.props.page);\r\n      this.props.fetchArticles(\r\n        this.props.q,\r\n        this.props.pageSize,\r\n        this.props.page,\r\n        this.props.from,\r\n        this.props.to\r\n      );\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.props.error) {\r\n      return <div>Error</div>;\r\n    }\r\n\r\n    return (\r\n      <ArticleList\r\n        items={this.getArticleListItems()}\r\n        loadMoreArticles={this.getPageNews()}\r\n        totalArticles={this.props.totalArticles}\r\n        page={this.props.page}\r\n        pageSize={this.props.pageSize}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  articleList: {\r\n    articles,\r\n    totalArticles,\r\n    articlesQuertyParams: { q, pageSize, page, from, to },\r\n    error\r\n  }\r\n}: StoreStructure): any => {\r\n  return { articles, totalArticles, q, pageSize, page, from, to, error };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any, { articleService }: any) => {\r\n  return {\r\n    fetchArticles: fetchArticles(articleService, dispatch)\r\n  };\r\n};\r\n\r\nexport default withBookstoreService(\r\n  connect(mapStateToProps, mapDispatchToProps)(ArticleListContainer)\r\n);\r\n","import HomePage from './article-list';\r\n\r\nexport default HomePage;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nimport { setQuertyToState } from \"../../actions\";\r\nimport { setFromDateToState, setToDateToState } from \"../../actions\";\r\nimport { StoreStructure } from \"../../entities/StoreStructure\";\r\nimport { ISOdateToDatepickerFormat } from \"../../utils/date-service\";\r\n\r\ninterface ArticleFilterType {\r\n  from: string;\r\n  fromDateOnChange: (event: string) => void;\r\n  to: string;\r\n  toDateOnChange: (event: string) => void;\r\n}\r\n\r\nclass ArticleFilter extends Component<ArticleFilterType> {\r\n  render() {\r\n    let { from, to } = this.props;\r\n    let dateFrom = ISOdateToDatepickerFormat(from);\r\n    let dateTo = ISOdateToDatepickerFormat(to);\r\n\r\n    return (\r\n      <form>\r\n        <TextField\r\n          id=\"dateFromInput\"\r\n          label=\"Date from\"\r\n          type=\"date\"\r\n          defaultValue={dateFrom}\r\n          onChange={event => this.props.fromDateOnChange(event.target.value)}\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n        />\r\n        <TextField\r\n          id=\"dateToInput\"\r\n          label=\"Date to\"\r\n          type=\"date\"\r\n          defaultValue={dateTo}\r\n          onChange={event => this.props.toDateOnChange(event.target.value)}\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\ninterface IArticleFilterContainerProps {\r\n  from: string;\r\n  setFromDateToState: (FromDate: string) => void;\r\n  to: string;\r\n  setToDateToState: (toDate: string) => void;\r\n}\r\n\r\nexport class ArticleFilterContainer extends Component<\r\n  IArticleFilterContainerProps\r\n> {\r\n  toDateChange() {\r\n    return (toDate: string) => {\r\n      this.props.setToDateToState(toDate);\r\n    };\r\n  }\r\n\r\n  fromDateChange() {\r\n    return (fromDate: string) => {\r\n      this.props.setFromDateToState(fromDate);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { from, to } = this.props;\r\n    return (\r\n      <ArticleFilter\r\n        from={from}\r\n        to={to}\r\n        fromDateOnChange={this.fromDateChange()}\r\n        toDateOnChange={this.toDateChange()}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  articleList: {\r\n    articlesQuertyParams: { from, to }\r\n  }\r\n}: StoreStructure): any => {\r\n  return { from, to };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any, { articleService }: any) => {\r\n  return {\r\n    setQuertyToState: setQuertyToState(dispatch),\r\n    setFromDateToState: setFromDateToState(dispatch),\r\n    setToDateToState: setToDateToState(dispatch)\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ArticleFilterContainer);\r\n","import ArticleFilter from './article-filter';\r\n\r\nexport default ArticleFilter;","import React from \"react\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport ArticleList from \"../article-list\";\r\nimport ArticleFilter from \"../article-filter\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Container maxWidth=\"lg\">\r\n        <ArticleFilter />\r\n        <ArticleList />\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport ReactMapboxGl, { Popup } from \"react-mapbox-gl\";\r\n\r\nconst MapboxMap = ReactMapboxGl({\r\n  accessToken:\r\n    \"pk.eyJ1IjoiYW5kcnJyOTYiLCJhIjoiY2s2aW81bTR6MDM0azNybnQwd2t3ZHhybyJ9.sOZgiiOJ5ai23hEZcCSczw\"\r\n});\r\n\r\nclass Map extends Component {\r\n  render() {\r\n    return (\r\n      <MapboxMap\r\n        style=\"mapbox://styles/mapbox/streets-v9\"\r\n        containerStyle={{\r\n          height: \"70vh\",\r\n          width: \"40vw\"\r\n        }}\r\n        center={[135.067192, 48.468523]}\r\n        zoom={[15]}\r\n      >\r\n        <Popup coordinates={[135.067192, 48.468523]}>\r\n          <h1>Fogstream</h1>\r\n        </Popup>\r\n      </MapboxMap>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;\r\n","import Map from \"./map\";\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\n\r\nimport Map from \"../map\";\r\n\r\nconst AboutPage = () => {\r\n  return <Map />;\r\n};\r\n\r\nexport default AboutPage;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { TextField, Switch, FormControlLabel } from \"@material-ui/core\";\r\n\r\nimport { StoreStructure } from \"../../entities/StoreStructure\";\r\nimport { setPageSizeToState, changeTheme, changeFontSize } from \"../../actions\";\r\n\r\ninterface SettingsPanelType {\r\n  pageSize: number;\r\n  darkTheme: boolean;\r\n  fontSize: number;\r\n  setQuertyToState: (pageSize: number) => void;\r\n  changeFontSize: (fontSize: number) => void;\r\n  changeTheme: () => void;\r\n}\r\n\r\nexport class SettingsPanel extends Component<SettingsPanelType> {\r\n  render() {\r\n    return (\r\n      <form noValidate>\r\n        <TextField\r\n          id=\"number-of-loaded-items-input\"\r\n          label=\"Number of loaded items\"\r\n          variant=\"outlined\"\r\n          value={this.props.pageSize.toString()}\r\n          onChange={event => this.props.setQuertyToState(+event.target.value)}\r\n        />\r\n        <TextField\r\n          id=\"font-size-input\"\r\n          label=\"Font size\"\r\n          variant=\"outlined\"\r\n          value={this.props.fontSize.toString()}\r\n          onChange={event => this.props.changeFontSize(+event.target.value)}\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={this.props.darkTheme}\r\n              onChange={this.props.changeTheme}\r\n              value=\"DarkTheme\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Dark theme\"\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  articleList: {\r\n    articlesQuertyParams: { pageSize }\r\n  },\r\n  uiParams: { darkTheme, fontSize }\r\n}: StoreStructure): any => {\r\n  return { pageSize, darkTheme, fontSize };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any, { articleService }: any) => {\r\n  return {\r\n    setQuertyToState: setPageSizeToState(dispatch),\r\n    changeTheme: changeTheme(dispatch),\r\n    changeFontSize: changeFontSize(dispatch)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPanel);\r\n","import SettingsPanel from './settings-panel'\r\n\r\nexport default SettingsPanel;","import React from \"react\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport SettingsPanel from \"../settings-panel\";\r\n\r\nconst SettingsPage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Container maxWidth=\"lg\">\r\n        <SettingsPanel />\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import React from \"react\";\r\n\r\nconst HelpPage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n\r\n</div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HelpPage;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { StoreStructure } from \"../../entities/StoreStructure\";\r\nimport { Article } from \"../../entities/Article\";\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 845,\r\n    marginBottom: 50\r\n  },\r\n  media: {}\r\n});\r\n\r\ninterface ArticleFullType {\r\n  articles: Article[];\r\n}\r\n\r\nconst ArticleFull = ({ articles }: ArticleFullType) => {\r\n  let { id } = useParams();\r\n  let article = articles.find(item => item.id === id);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={article?.urlToImage}\r\n        component=\"img\"\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {article?.title}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h5\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        ></Typography>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n          {article?.content}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  articleList: { articles }\r\n}: StoreStructure): any => {\r\n  return {\r\n    articles\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ArticleFull);\r\n","import ArticleFull from \"./article-full\";\r\n\r\nexport default ArticleFull;\r\n","import App from './app'\r\n\r\nexport default App;","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Layout from \"../pages/layout\";\r\nimport { HomePage, AboutPage, SettingsPage, HelpPage } from \"../pages\";\r\n\r\nimport ArticleFull from \"../article-full\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n        <Route path={process.env.PUBLIC_URL + \"/\"} component={HomePage} exact />\r\n        <Route\r\n          path={process.env.PUBLIC_URL + \"/articles/:id\"}\r\n          component={ArticleFull}\r\n        />\r\n        <Route\r\n          path={process.env.PUBLIC_URL + \"/settings\"}\r\n          component={SettingsPage}\r\n          exact\r\n        />\r\n        <Route\r\n          path={process.env.PUBLIC_URL + \"/help\"}\r\n          component={HelpPage}\r\n          exact\r\n        />\r\n        <Route\r\n          path={process.env.PUBLIC_URL + \"/about\"}\r\n          component={AboutPage}\r\n          exact\r\n        />\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// import {\r\n//   FETCH_ARTICLE_REQUEST,\r\n//   FETCH_ARTICLE_SUCCESS,\r\n//   FETCH_ARTICLE_FAILURE,\r\n//   FETCH_ARTICLE_SUCCESS_EMPTY_RESULT,\r\n//   SET_ARTICLE_QUERTY_PARAMS,\r\n//   QUERTY_INPUT_CHANGE,\r\n//   FROM_DATE_CHANGE,\r\n//   TO_DATE_CHANGE,\r\n//   PAGE_SIZE_CHANGE\r\n// } from \"../actions/actions\";\r\nimport * as actions from \"../actions/actions\";\r\nimport { StoreStructure, articleListType } from \"../entities/StoreStructure\";\r\nimport { ActionType } from \"../entities/Actions\";\r\nimport moment from \"moment\";\r\nimport { DatepickerDateToISOformat } from \"../utils/date-service\";\r\n\r\nlet fromDate: string = moment()\r\n  .day(0)\r\n  .toISOString();\r\nlet toDate: string = moment().toISOString();\r\n\r\nconsole.log(\"fromDate\", fromDate);\r\nconst initialState: articleListType = {\r\n  articles: [],\r\n  totalArticles: 0,\r\n  articlesQuertyParams: {\r\n    q: \"bitcoin\",\r\n    pageSize: 5,\r\n    page: 1,\r\n    from: fromDate,\r\n    to: toDate\r\n  },\r\n  loading: true,\r\n  error: null\r\n};\r\nconsole.log(\"From: \", initialState.articlesQuertyParams.from);\r\nconsole.log(\"To: \", initialState.articlesQuertyParams.to);\r\nexport const upateArticle = (\r\n  state: StoreStructure,\r\n  action: ActionType\r\n): articleListType => {\r\n  if (state === undefined) return initialState;\r\n\r\n  switch (action.type) {\r\n    case actions.FETCH_ARTICLE_REQUEST:\r\n      console.log(actions.FETCH_ARTICLE_REQUEST);\r\n      return {\r\n        ...state.articleList,\r\n        articlesQuertyParams: {\r\n          ...state.articleList.articlesQuertyParams,\r\n          q: action.payload.q\r\n        },\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case actions.FETCH_ARTICLE_SUCCESS:\r\n      console.log(actions.FETCH_ARTICLE_SUCCESS);\r\n      console.log(action.payload);\r\n      return {\r\n        ...state.articleList,\r\n        articlesQuertyParams: {\r\n          ...state.articleList.articlesQuertyParams,\r\n          page: state.articleList.articlesQuertyParams.page + 1\r\n        },\r\n        articles: state.articleList.articles.concat(action.payload.articles),\r\n        totalArticles: action.payload.totalArticles,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case actions.FETCH_ARTICLE_SUCCESS_EMPTY_RESULT:\r\n      console.log(actions.FETCH_ARTICLE_SUCCESS_EMPTY_RESULT);\r\n      return {\r\n        ...state.articleList,\r\n        articles: [],\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case actions.FETCH_ARTICLE_FAILURE:\r\n      console.log(actions.FETCH_ARTICLE_FAILURE);\r\n      return {\r\n        ...state.articleList,\r\n        articles: [],\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case actions.SET_ARTICLE_QUERTY_PARAMS:\r\n      console.log(actions.SET_ARTICLE_QUERTY_PARAMS);\r\n      return {\r\n        ...state.articleList,\r\n        articles: [],\r\n        articlesQuertyParams: {\r\n          ...action.payload\r\n        }\r\n      };\r\n\r\n    case actions.QUERTY_INPUT_CHANGE:\r\n      console.log(actions.QUERTY_INPUT_CHANGE);\r\n      return {\r\n        ...state.articleList,\r\n        articles: [],\r\n        articlesQuertyParams: {\r\n          ...state.articleList.articlesQuertyParams,\r\n          q: action.payload\r\n        }\r\n      };\r\n\r\n    case actions.FROM_DATE_CHANGE:\r\n      console.log(actions.FROM_DATE_CHANGE);\r\n      console.log(action.payload);\r\n      return {\r\n        ...state.articleList,\r\n        articles: [],\r\n        articlesQuertyParams: {\r\n          ...state.articleList.articlesQuertyParams,\r\n          page: 1,\r\n          from: DatepickerDateToISOformat(action.payload)\r\n        }\r\n      };\r\n\r\n    case actions.TO_DATE_CHANGE:\r\n      console.log(actions.TO_DATE_CHANGE);\r\n      return {\r\n        ...state.articleList,\r\n        articles: [],\r\n        articlesQuertyParams: {\r\n          ...state.articleList.articlesQuertyParams,\r\n          page: 1,\r\n          to: DatepickerDateToISOformat(action.payload)\r\n        }\r\n      };\r\n\r\n    case actions.PAGE_SIZE_CHANGE:\r\n      console.log(actions.PAGE_SIZE_CHANGE);\r\n      return {\r\n        ...state.articleList,\r\n        articles: [],\r\n        articlesQuertyParams: {\r\n          ...state.articleList.articlesQuertyParams,\r\n          page: 1,\r\n          pageSize: action.payload\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state.articleList;\r\n  }\r\n};\r\n","import { THEME_CHANGE, FONT_SIZE_CHANGE } from \"../actions/actions\";\r\n\r\nimport { uiParamsType, StoreStructure } from \"../entities/StoreStructure\";\r\nimport { ActionType } from \"../entities/Actions\";\r\nconst initialState: uiParamsType = {\r\n  darkTheme: false,\r\n  fontSize: 12\r\n};\r\n\r\nexport const upateUIparams = (\r\n  state: StoreStructure,\r\n  action: ActionType\r\n): uiParamsType => {\r\n  if (state === undefined) return initialState;\r\n\r\n  switch (action.type) {\r\n    case THEME_CHANGE:\r\n      console.log(THEME_CHANGE);\r\n\r\n      return {\r\n        ...state.uiParams,\r\n        darkTheme: !state.uiParams.darkTheme\r\n      };\r\n\r\n    case FONT_SIZE_CHANGE:\r\n      console.log(FONT_SIZE_CHANGE);\r\n\r\n      return {\r\n        ...state.uiParams,\r\n        fontSize: action.payload\r\n      };\r\n\r\n    default:\r\n      return state.uiParams;\r\n  }\r\n};\r\n","import {createStore} from 'redux'\r\n\r\nimport {reducer} from './reducers/index';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import { upateArticle } from \"./article\";\r\nimport { upateUIparams } from \"./uiParams\";\r\nimport { StoreStructure } from \"../entities/StoreStructure\";\r\nimport { ActionType } from \"../entities/Actions\";\r\n\r\nconst reducer = (state: any, action: ActionType): StoreStructure => {\r\n  return {\r\n    articleList: upateArticle(state, action),\r\n    uiParams: upateUIparams(state, action)\r\n  };\r\n};\r\n\r\nexport { reducer };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport App from \"./components/app\";\r\nimport store from \"./store\";\r\nimport ArticleService from \"./services/article-service\";\r\nimport { ArticleServiceProvider } from \"./services/article-service-context\";\r\n\r\nconst articleService = new ArticleService();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ArticleServiceProvider value={{articleService}}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </ArticleServiceProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.3b84cf99.svg\";"],"sourceRoot":""}